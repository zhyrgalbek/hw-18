{"version":3,"sources":["components/krestik/Square.module.css","components/krestik/Game.module.css","components/krestik/Square.js","components/krestik/Board.js","components/krestik/Game.js","App.js","index.js"],"names":["module","exports","Square","props","useState","bool","setBool","useEffect","reset","className","styles","square","onClick","index","value","Board","winArr","arr","reduceArrState","prevState","action","type","newArr","stateArr","map","elem","w","state","i","length","masiv","num","isArr","proverka","krestik","nolik","win","nicha","undefined","Game","useReducer","arrState","dispatchArrState","handleClick","block","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36079e1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__15tfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Game_block__1MZUD\"};","import { useEffect, useState } from 'react';\r\nimport styles from './Square.module.css';\r\n\r\nfunction Square(props){\r\n    const [bool, setBool] = useState('');\r\n\r\n    useEffect(()=>{\r\n        if(props.reset === false){\r\n            setBool(false);\r\n        }\r\n    }, [props.reset]);\r\n\r\n    function handleIndex(){\r\n        if(bool !== true){\r\n            props.onClick(props.index);\r\n            setBool(!bool);\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    return (\r\n        <button className={styles.square} onClick={handleIndex}>{props.value}</button>\r\n    )\r\n\r\n}\r\n\r\nexport default Square;","import Square from \"./Square\";\r\n\r\nfunction Board(props){\r\n    return <Square value={props.value} onClick={props.onClick} index={props.index} reset={props.reset} />\r\n}\r\n\r\nexport default Board;","import Board from \"./Board\";\r\nimport styles from './Game.module.css';\r\nimport { useReducer } from 'react';\r\n\r\nconst winArr = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n]\r\n\r\nfunction proverka(arr, state) {\r\n    let bool = false;\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let masiv = arr[i];\r\n        if (state[masiv[0]] !== '' && state[masiv[1]] !== '' && state[masiv[2]] !== '') {\r\n            if (state[masiv[0]] === state[masiv[1]] && state[masiv[1]] === state[masiv[2]]) {\r\n                return state[masiv[0]];\r\n            }\r\n        }\r\n    }\r\n    if(isArr(state, '')){\r\n        bool = true;\r\n    }\r\n    if(bool){\r\n        return 'ничья';\r\n    }\r\n    return;\r\n}\r\n\r\n\r\n\r\nfunction isArr(arr, num){\r\n    for(let i=0;i<arr.length;i++){\r\n        if(arr[i] === num){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\n\r\nconst arr = [\r\n    '', '', '',\r\n    '', '', '',\r\n    '', '', ''\r\n];\r\n\r\nfunction reduceArrState(prevState, action){\r\n    if(action.type === 'ADD'){\r\n        let newArr = prevState.stateArr.map((elem, index)=>{\r\n            if(action.index === index){\r\n                if(prevState.bool !== true){\r\n                    return 'x';\r\n                } else {\r\n                    return '0';\r\n                }\r\n            } else {\r\n                return elem;\r\n            }\r\n        });\r\n\r\n        let w = proverka(winArr, newArr);\r\n        let krestik = prevState.krestik;\r\n        let nolik = prevState.nolik;\r\n        if(w === 'x'){\r\n            krestik++;\r\n        }\r\n        if(w === '0'){\r\n            nolik++;\r\n        }\r\n        return {\r\n            ...prevState,\r\n            bool: !prevState.bool,\r\n            stateArr: newArr,\r\n            win: w,\r\n            krestik: krestik,\r\n            nolik: nolik,\r\n            nicha: w === 'ничья' ? prevState.nicha + 1:0,\r\n            reset: true\r\n        }\r\n    }\r\n    if(action.type === 'RESET'){\r\n        return {\r\n            ...prevState,\r\n            stateArr: prevState.stateArr.map((elem)=>{\r\n                return '';\r\n            }),\r\n            win: undefined,\r\n            reset: false,\r\n            bool: false\r\n        }\r\n    }\r\n}\r\n      \r\n\r\nfunction Game() {\r\n\r\n    const [arrState, dispatchArrState] = useReducer(reduceArrState, {\r\n        win: undefined,\r\n        stateArr: arr,\r\n        bool: false,\r\n        krestik: 0,\r\n        nolik: 0,\r\n        nicha: 0,\r\n        reset: false\r\n    });\r\n\r\n\r\n    function handleClick(index) {\r\n        if(arrState.win !== undefined){\r\n            return;\r\n        }\r\n        dispatchArrState({\r\n            type: 'ADD',\r\n            index: index\r\n        })\r\n    }\r\n\r\n    function resetArr(){\r\n        dispatchArrState({\r\n            type: 'RESET'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p>krestik: {arrState.krestik}</p>\r\n            <p>nolik: {arrState.nolik}</p>\r\n            <p>nicha: {arrState.nicha}</p>\r\n            {arrState.win && `выиграл ${arrState.win}`}\r\n            <div className={styles.block}>\r\n                {\r\n                    arrState.stateArr.map((elem, index) => {\r\n                        return <Board key={index} value={elem} index={index} onClick={handleClick} reset={arrState.reset} />\r\n                    })\r\n                }\r\n            </div>\r\n            <button onClick={resetArr}>очистить</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from 'react';\n\nimport './App.css';\nimport Game from './components/krestik/Game';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}